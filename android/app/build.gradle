plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services" // Firebase plugin for Google services
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader) }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

android {
    namespace "com.example.kiralik_kaleci" // Define the namespace
    compileSdkVersion 35 // Match the latest stable SDK version
    ndkVersion = "27.0.12077973" // Ensure NDK matches installed version
    lintOptions {
        abortOnError false
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        // old version was JAVAVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17" // Ensure Kotlin compatibility with Java 17
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin' // Include Kotlin source directory
    }

    defaultConfig {
        applicationId "com.example.kiralik_kaleci" // App package name
        minSdkVersion 23 // Minimum supported Android version
        targetSdkVersion 35 // Target Android version
        versionCode flutterVersionCode.toInteger() // Version code from `local.properties`
        versionName flutterVersionName // Version name from `local.properties`
        multiDexEnabled true // Enable multidex support
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug // Use debug signing for now
            // Optionally enable proguard for release builds:
            // minifyEnabled true
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "env"

        productFlavors {
            dev {
                dimension "env"
                applicationId "com.example.kiralik_kaleci.dev"
                versionNameSuffix "-dev"
                resValue "string", "app_name", "Kalecim Dev"
            }
            stage {
                dimension "env"
                applicationId "com.example.kiralik_kaleci.stage"
                versionNameSuffix "-stage"
                resValue "string", "app_name", "Kalecim Stage"
            }
            prod {
                dimension "env"
                applicationId "com.example.kiralik_kaleci"
                resValue "string", "app_name", "Kalecim"
            }
        }
    }





flutter {
    source '../..' // Flutter module source
}

dependencies {
    // Firebase dependencies
    implementation platform('com.google.firebase:firebase-bom:32.6.0') // Manage Firebase versions
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'androidx.work:work-runtime:2.7.1'

    // Multidex support
    implementation 'androidx.multidex:multidex:2.0.1'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.2.2'
    // (Optional) Add other dependencies here as needed
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
}
